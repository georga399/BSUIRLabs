#include <iostream>
void contextmenu()
{
     printf("\e[1;1H\e[2J");
    std::cout << "Задача №13 \n";
    std::cout << "Выполнил Азаров Егор (253501)\n" <<
                "Суть задания:\n" <<
                "Пользователь вводит размерность магического квадрата. Далее программа заполняет его нужными числами и отображает пользователю.\n";
    std::cout << "\n-------------------------------------------------------------------\n";
}

void draw(void);
void OddMagic(unsigned long long** matr, unsigned long long n);
void DoubleEvenMagic(unsigned long long** matr, unsigned long long n);
void SingleEvenMagic(unsigned long long** matr, unsigned long long n);

int main()
{
    contextmenu();
    setlocale(LC_ALL, "Russian");
    unsigned  long long n;
    std::cout << "Введите размерность магического квадрата: ";
    //std::cin >> n;
    while (!(std::cin >>n) || (std::cin.peek()) != '\n' || n<3 || n > 10000)
    {
        std::cin.clear();
        while (std::cin.get() != '\n');
        if(n>10000)
        {
            draw();
        }
        std::cout << "Ошибка!\nВведите заново: ";
    }
    unsigned long long  ** matr = (unsigned long long **)malloc((n)*sizeof(unsigned long long*));
    for (int i = 0; i<n; i++)
    {
        matr[i] = (unsigned long long*)calloc((n),sizeof(unsigned long long));
    }
    
    if(n%4 == 0) DoubleEvenMagic(matr, n);
    else if(n%2==0) SingleEvenMagic(matr, n);
    else OddMagic(matr, n);
     
    
    for(int i = 0; i<n; i++)
    {

        for(int j =0; j<n; j++)
        {
            std::cout << matr[i][j] << ' ';
        }
        std::cout << std::endl;
        free(matr[i]);
    }
    free(matr);
}

void OddMagic(unsigned long long** matr, unsigned long long n)
{
    int x=0, y=n/2;
    for(int i=1; i<=n*n; i++)
    {
        matr[x][y]=i;
        x--;                                 
        y++;
        if(x<0 && y>n-1)
        {
            x=x+2;
            y=y-1;
        }     
        else if(x<0)
        {
            x=x+n;                  
        }
        else if(y>n-1)
        {
            y=y-n;                
        }
        else if(matr[x][y]!=0) 
        {
            x=x+2; 
            y=y-1;
        }
    }
}
void DoubleEvenMagic(unsigned long long** matr, unsigned long long n)
{
    for(int i=1, x=0, y=0; i<=n*n; i++)      
    {
        matr[x][y]=i;
        y++;
        if(y>n-1) {x++; y-=n;}
    }
    for(int i=0; i<n; i++)
    {                   
        for(int j=0; j<n; j++)
        {
            if(i%4==0 && j%4==0)
            {             
                for(int k=0; k<4; k++)
                {
                    matr[i+k][j+k]=(n*n+1)-matr[i+k][j+k];
                }
            }
            else if(i%4==3 &&j%4==0)
            {         
                for(int k=0; k<4; k++)
                {
                    matr[i-k][j+k]=(n*n+1)-matr[i-k][j+k];
                }
            }
        }
    }
}
void SingleEvenMagic(unsigned long long** matr, unsigned long long n)
{
    int n0=n/2;
    OddMagic(matr, n0);
    for(int i=0; i<n0; i++)
    {
        for(int j=0; j<n0; j++)
        {
            matr[i+n0][j+n0]=matr[i][j]+n0*n0;       
            matr[i][j+n0]=matr[i+n0][j+n0]+n0*n0;     
            matr[i+n0][j]=matr[i][j+n0]+n0*n0;       
        }
    }
    int k=(n-2)/4;                             
    for(int i=0; i<n0; i++)
    {
        for(int j=0; j<k; j++)
        {
            if(i==n0/2) 
            {
                std::swap(matr[i][i+j],matr[i+n0][i+j]);   
            }
            else
            { 
                std::swap(matr[i][j],matr[i+n0][j]);              
            }
        }
    }
    for(int i=0; i<n0; i++)
    {
        for(int j=n0+n0/2; j>n0+n0/2-(k-1); j--)
        {
            std::swap(matr[i][j],matr[i+n0][j]);
        }
    }
}
void draw()
{
    std::cout <<"8888888888888888888888888888888888888888888888888888888\n8888888888__________________888888888888888888888888888\n88888888___8888888888888888______8888888888888888888888\n88888888__88_____________888888____88888888888888888888\n888888__888___________________8888____88888888888888888\n88888__888_______________________8888___888888888888888\n8888__88____________________________888___8888888888888\n888__8_________________________________88__888888888888\n88__8____________________________________88__8888888888\n8__88_____________________________________88___88888888\n8__88______________________888888___________88___888888\n8__88________8888_________88___88____________88___88888\n8__88_______88_8888_______888_888_____________888__8888\n8__88______88___888________88888________________88__888\n8_888______8888888_______________________________8__888\n8_88_____________________________________________88__88\n8_88______________________________________________88_88\n8_88______________________________________________88__8\n8_88______________________________________________88__8\n8_88_______________________________________________8__8\n8_88_______________________________________________8__8\n8_88_______________________________________________8__8\n8_88_______________________________________________8_88\n88_88____________________________________88________8_88\n88__8_______________88888888888888888888888________8_88\n88__88______________8888888888888888888____________8_88\n888__88______________88888888______________________8_88\n8888__88___________________________________________8_88\n88888__888________________________________________88_88\n888888___88_______________________________________8_888\n8888888___88_____________________________________88_888\n888888888__8888________________________________88___888\n8888888888____8888___________________________888__88888\n888888888888_____8888_____________________8888___888888\n888888888888888_____88888888888____88888888____88888888\n8888888888888888888_________________________88888888888\n888888888888888888888888888888____888888888888888888888\n888888888888888888888888888888____888888888888888888888\n8888888888888888888888888888888___888888888888888888888\n8888888888888888888888888888888____88888888888888888888\n8888888888888888888888888888888____88888888888888888888\n88888888888888888888888888888888____8888888888888888888\n88888888888888888888888888888888____8888888888888888888\n8888888888888888888888888888888888888888888888888888888\n";
}